{
    "get": {
        "operationId": "search",
        "summary": "Search for a file",
        "description": "Search for files",
        "security": [],
        "parameters": [
            {
                "name": "path",
                "in": "query",
                "description": "Search for a path that contains this value",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            {
                "name": "path_re",
                "in": "query",
                "description": "Search for a path using Regex",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "regex"
                }
            },
            {
                "name": "tag_whitelist",
                "in": "query",
                "description": "Whitelist for exact tags that must exist on returned files.",
                "required": false,
                "explode": true,
                "schema": {
                    "type": "string"
                }
            },
            {
                "name": "tag_blacklist",
                "in": "query",
                "description": "Blacklist for exact tags that must cant exist on returned files.",
                "required": false,
                "explode": true,
                "schema": {
                    "type": "string"
                }
            },
            {
                "name": "count",
                "in": "query",
                "description": "Number of files to return, max 200",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 200,
                    "default": 50
                }
            },
            {
                "name": "index",
                "in": "query",
                "description": "Index in the file list to start at",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 0
                }
            },
            {
                "name": "sort",
                "in": "query",
                "description": "How should the files be sorted. Ascending by default. None using SQL default sorting (By ID), random *shouldn't* be used with index, as the random order changes every time.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "none",
                        "size",
                        "stars",
                        "date",
                        "id",
                        "random"
                    ],
                    "default": "none"
                }
            },
            {
                "name": "sort_reverse",
                "in": "query",
                "description": "Sort descending instead of ascending",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            }
        ],
        "responses": {
            "200": {
                "description": "Search was successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Code": {
                                    "type": "integer",
                                    "default": 200
                                },
                                "Data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "../schemas/file.json"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "json": {
                                "value": {
                                    "Code": 200,
                                    "Data": [
                                        {
                                            "Id": 0,
                                            "Path": "MyFile",
                                            "Tags": [
                                                "Test-Tag1",
                                                "Test-Tag2"
                                            ],
                                            "LastViewed": "2025-03-11T22:09:23-06:00",
                                            "Stars": 4,
                                            "Size": 173020
                                        },
                                        {
                                            "Id": 50,
                                            "Path": "VeryCoolFile",
                                            "Tags": [
                                                "Test-Tag55",
                                                "Test-Tag2"
                                            ],
                                            "LastViewed": "2027-03-11T22:09:23-06:00",
                                            "Stars": 2,
                                            "Size": 173
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "description": "A search parameter was invalid",
                "content": {
                    "application/json": {
                        "examples": {
                            "json": {
                                "value": {
                                    "Code": 400,
                                    "Data": "Error message"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}